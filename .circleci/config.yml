version: 2.1

commands:
  install_deps:
    steps:
      - run:
          name: Install Dependencies
          command: |
            npm ci --prefix src/

jobs:
  build:
    docker:
      - image: cimg/node:lts
        auth:
          username: thenewoldmodel # NOTE(Daniel): how do I hide these values?
          password: 4stig-FireRed_1480 # ... is there a formatting pattern to hide this?
    environment:
      ENV: CI

    working_directory: ~/assignment-1-S3729065

    steps:
      - checkout
      - install_deps
      - run:
          name: compile
          command: |
            npm build ./assignment-1-S3729065
      #- browser-tools/install-firefox
      #- browser-tools/install-geckodriver #NOTE(Daniel): install browsers for testing.

  pack:
    docker:
      - image: cimg/node:lts # using cimg/node:15.11.0 as stated in the docs, documented as the preferred way.
    steps:
      - run:
          name: compile
          command: |
            npm i --save npm@latest
            npm build ./assignment-1-S3729065

  jest-test:
    docker:
      - image: cimg/node:lts # using cimg/node:15.11.0 as stated in the docs, documented as the preferred way.
    
    environment:
      JEST_JUNIT_OUTPUT_DIR: test-output
    
    steps:
      - run:
          name: start test service
          command: |
            npm run start

      - run:
          name: unit test
          command: |
            npm run test-unit

      - store_test_results:
          path: jest-results

  integrity-test:
      docker:
        - image: cimg/node:lts
        - image: mongo:4.0
      environment:
        APP_PORT: 8080
      steps:
        - run:
            name: integration test
            command: |
              npm run test-integration
        - store_test_results:
            path: integrity-results

  e2e-test:
    docker:
      - image: cimg/node:lts
    steps:
    - run:
        name: e2e test
        command: |
          npm run test-e2e
    - store_test_results:
        path: e2e-results

  linting:
    docker:
      - image: cimg/node:lts
    steps:
      - run:
          name: linting
          command: |
            npm run test-lint
      - store_test_results:
          path: linting-results

  code-coverage:
    docker:
      - image: cimg/node:lts
    steps:
      - run:
          name: validate code coverage
          command: |
            bash < (curl -s https://codecov.io/bash)
      - store_test_results:
          path: code-coverage-results

  scan-secure:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install_deps

      - run:
          name: install node scan
          command: |
            sudo apt update
            sudo apt install python3-pip
            pip3 install nodejsscan
      - run:
          name: execute node scan
          command: |
            nodejsscan -d ./ -o outputs/sast/nodejs-scan-report.json

      - run:
          name: parse report
          command: |
            exit $(cat sast-output.json | jq .total_count.sec)
      - store_artifacts:
          path: outputs/sast/

workflows:
  build-pack-deploy:
    jobs:
      - build
      # - pack
      - jest-test
      - integrity-test
      - e2e-test
      - linting
      - code-coverage
      - scan-secure

